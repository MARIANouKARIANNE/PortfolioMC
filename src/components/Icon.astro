---
import type { HTMLAttributes } from 'astro/types';
import { iconPaths } from './IconPaths'; // Assurez-vous que le fichier IconPaths.ts existe dans le même répertoire

interface Props {
  icon: keyof typeof iconPaths;
  color?: string;
  gradient?: boolean;
  size?: string;
}

const { color = 'currentColor', gradient, icon, size } = Astro.props;
const iconPath = iconPaths[icon];

const attrs: HTMLAttributes<'svg'> = {};
if (size) attrs.style = { '--size': size };

const gradientId = 'icon-gradient-' + Math.round(Math.random() * 10e12).toString(36);
---

<svg
  xmlns="http://www.w3.org/2000/svg"
  width="40"
  height="40"
  viewBox="0 0 256 256"
  aria-hidden="true"
  stroke={gradient ? `url(#${gradientId})` : color}
  fill={gradient ? `url(#${gradientId})` : 'none'}
  {...attrs}
>
  <g set:html={iconPath} />
  {gradient && (
    <defs>
      <linearGradient
        id={gradientId}
        x1="0%"
        y1="0%"
        x2="100%"
        y2="100%"
        gradientUnits="userSpaceOnUse"
      >
        <stop offset="0%" stop-color="var(--gradient-stop-1)" />
        <stop offset="50%" stop-color="var(--gradient-stop-2)" />
        <stop offset="100%" stop-color="var(--gradient-stop-3)" />
      </linearGradient>
    </defs>
  )}
</svg>

<style>
  svg {
    vertical-align: middle;
    width: var(--size, 1em);
    height: var(--size, 1em);
  }
</style>